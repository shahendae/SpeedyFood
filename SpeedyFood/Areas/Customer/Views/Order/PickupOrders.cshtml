@model IEnumerable<OrderViewModel>
@using SpeedyFood.Utility
@{
    ViewData["Title"] = "PickupOrders";
}

<form method="get">
    <br />
    <br />
    <h2 class="text-info">Orders Ready for Pickup</h2>
    <br />
    <div class="border backgroundWhite">
        <div class="container border border-secondary">
            <div class="row container">
                <div class="col-11">
                    <div class="row pt-2 pb-2">
                        <div class="col-4">
                            @Html.Editor("SearchName", new { htmlAttributes = new { @class = "form-control", @placeholder = "Name.." } })
                        </div>
                        <div class="col-4">
                            @Html.Editor("SearchPhone", new { htmlAttributes = new { @class = "form-control", @placeholder = "Phone.." } })
                        </div>
                        <div class="col-4">
                            @Html.Editor("SearchEmail", new { htmlAttributes = new { @class = "form-control", @placeholder = "Email.." } })
                        </div>
                    </div>
                </div>
                <div class="col-1">
                    <div class="row pt-2 pb-2">
                        <button type="submit" name="submit" value="Search" class="btn btn-info form-control">
                            <i class="fas fa-search"></i>
                        </button>
                    </div>
                </div>
            </div>
        </div>
        <br />
        <div>
            @if (Model.Count() > 0)
            {
                <table class="table table-striped border">
                    <tr class="table-secondary">
                        <th>
                            @Html.DisplayNameFor(m => m.OrderHeader.Id)
                        </th>
                        <th>
                            @Html.DisplayNameFor(m => m.OrderHeader.PickUpName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(m => m.OrderHeader.ApplicationUser.Email)
                        </th>
                        <th>
                            @Html.DisplayNameFor(m => m.OrderHeader.PickUpDateAndTime)
                        </th>
                        <th>
                            @Html.DisplayNameFor(m => m.OrderHeader.OrderTotal)
                        </th>
                        <th>
                            Total Items
                        </th>
                        <th></th>
                    </tr>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(m => item.OrderHeader.Id)
                            </td>
                            <td>
                                @Html.DisplayFor(m => item.OrderHeader.PickUpName)
                            </td>
                            <td>
                                @Html.DisplayFor(m => item.OrderHeader.ApplicationUser.Email)
                            </td>
                            <td>
                                @Html.DisplayFor(m => item.OrderHeader.PickUpDateAndTime)
                            </td>
                            <td>
                                @Html.DisplayFor(m => item.OrderHeader.OrderTotal)
                            </td>
                            <td>
                                @Html.DisplayFor(m => item.OrderDetailsList.Count)
                            </td>
                            <td>
                                <button type="button" class="btn btn-success anchorDetail" data-id="@item.OrderHeader.Id" data-toggle="modal">
                                    <i class="far fa-list-alt"></i> Details
                                </button>
                            </td>
                        </tr>
                    }
                </table>
            }
            else
            {
                <p>No Order List exists ...</p>
            }
        </div>
    </div>
</form>


<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog-centered modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header bg-success text-light justify-content-center">
                <h5 class="modal-title">Order Details</h5>
            </div>
            <div class="modal-body justify-content-center" id="ModalContent">

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(function () {
            $('.anchorDetail').click(function () {

                var $buttonClicked = $(this);
                var id = $buttonClicked.attr('data-id');

                $.ajax({
                    type: "GET",
                    url: '/Customer/Order/GetOrderDetails',
                    contentType: "application/json; charset=utf-8",
                    data: { "Id": id },
                    cache: false,
                    success: function (data) {
                        $('#ModalContent').html(data);
                        $('#myModal').modal('show');
                    },
                    error: function () {
                        alert("Load Failed");
                    }
                })

            });
        });
    </script>
}
